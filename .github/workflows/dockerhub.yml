name: 'dockerhub'

on:
  push:
    branches:
    - master

jobs:
  build-bagua:
    strategy:
      fail-fast: false
      matrix:
        include:
          - cuda-version: "cuda10.2"
            cudnn-version: "cudnn7"
            pytorch-version: "pytorch-1.9.0"
          - cuda-version: "cuda11.1"
            cudnn-version: "cudnn8"
            pytorch-version: "pytorch-1.9.0"
          - cuda-version: "cuda11.3"
            cudnn-version: "cudnn8"
            pytorch-version: "pytorch-1.10.0"
          - cuda-version: "cuda11.3"
            cudnn-version: "cudnn8"
            pytorch-version: "pytorch-1.11.0"
          - cuda-version: "cuda11.3"
            cudnn-version: "cudnn8"
            pytorch-version: "pytorch-1.12.0"
          - cuda-version: "cuda11.6"
            cudnn-version: "cudnn8"
            pytorch-version: "pytorch-1.13.0"
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: "Build:checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: test env
        run: |
          uname -a
          cat /etc/os-release
          python --version || echo no python
          python3 --version || echo no python3
          make --version || echo no make
          cmake --version || echo no cmake
          rustc --version || echo no rust
          gcc --version || echo no gcc
          nvcc --version || echo no cuda
          lspci | grep NVIDI || echo no GPU
          nvidia-smi || echo no nvidia-smi
          pip3 list | grep torch || echo no torch in pip3
          pip3 list | grep numpy || echo no numpy in pip3
          pip3 list | grep tqdm || echo no tqdm in pip3
          pip3 list | grep bagua || echo no bagua in pip3
          pip list | grep torch || echo no torch in pip
          pip list | grep numpy || echo no numpy in pip
          pip list | grep tqdm || echo no tqdm in pip
          pip list | grep bagua || echo no bagua in pip
      - name: build and push bagua
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          push: true
          tags: woqidaideshi/bagua:master-${{ matrix.pytorch-version }}-${{ matrix.cuda-version }}-${{ matrix.cudnn-version }}
          file: docker/Dockerfile.${{ matrix.pytorch-version }}-${{ matrix.cuda-version }}-${{ matrix.cudnn-version }}
  build-manylinux:
    strategy:
      fail-fast: false
      matrix:
        cuda-version:
          - "102"
          - "111"
          - "113"
          - "115"
          - "116"
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: "Build:checkout"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: test env
        run: |
          uname -a
          cat /etc/os-release
          python --version || echo no python
          python3 --version || echo no python3
          make --version || echo no make
          cmake --version || echo no cmake
          rustc --version || echo no rust
          gcc --version || echo no gcc
          nvcc --version || echo no cuda
          lspci | grep NVIDI || echo no GPU
          nvidia-smi || echo no nvidia-smi
          pip3 list | grep torch || echo no torch in pip3
          pip3 list | grep numpy || echo no numpy in pip3
          pip3 list | grep tqdm || echo no tqdm in pip3
          pip3 list | grep bagua || echo no bagua in pip3
          pip list | grep torch || echo no torch in pip
          pip list | grep numpy || echo no numpy in pip
          pip list | grep tqdm || echo no tqdm in pip
          pip list | grep bagua || echo no bagua in pip
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push bagua/manylinux
        uses: docker/build-push-action@v2.6.1
        with:
          context: .
          push: true
          tags: woqidaideshi/manylinux-cuda:${{ matrix.cuda-version }}
          file: docker/Dockerfile.manylinux-cuda${{ matrix.cuda-version }}
